var documenterSearchIndex = {"docs":
[{"location":"references/#References","page":"Bibliography","title":"References","text":"","category":"section"},{"location":"references/","page":"Bibliography","title":"Bibliography","text":"J. Möllmer, M. Lange, A. Möller, C. Patzschke, K. Stein, D. Lässig, J. Lincke, R. Gläser, H. Krautscheid and R. Staudt. Pure and mixed gas adsorption of CH_4 and N_2 on the metal–organic framework Basolite® A100 and a novel copper-based 1,2,4-triazolyl isophthalate MOF. Journal of Materials Chemistry 22, 10274–10286 (2012).\n\n\n\n","category":"page"},{"location":"tutorials/isosteric_heat/#isosteric","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"","category":"section"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"During adsorption, heat is released as adsorbate molecules transition to a lower energy state on the adsorbent surface compared to the bulk gas phase. This released heat partially accumulates in the adsorbent, causing a temperature rise on its surface, which in turn can decelerate the adsorption process - as adsorption is an exothermic process.","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"Predicting equilibrium loading at a given temperature and pressure often receives greater focus. However, accurately predicting the energy release as a function of these same variables is equally critical, as it is as impactful as loading in the adsorption process.","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"On an energetically heterogeneous surface, the isosteric heat decreases as surface loading increases. Isotherms like the single-site Langmuir model, which assume a constant heat of adsorption regardless of surface loading, are therefore often inadequate for accurately representing experimental data in many cases.","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"Other isotherms can account for surface heterogeneity such as Toth:","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"n = fracMKP(1 + M(K P)^f)^1f","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"However, exhibits an unrealistic infinitely large negative value at high surface loading. below you can see the behavior of the isosteric heat for the toth isotherm as a function of the loading. You can also see the comparison of the analytical expression (which is very tedious to derive) and the one given by Langmuir.jl with automatic differentiation.","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"using Langmuir, Plots\ntoth = Toth(7.464, 3.6e-7, 8.3144*-5649.81, 0.5, 50.22)\np_range = 1e-5:500.0:10*101325.0 |> collect\nloading_350_t = loading.(toth, p_range, 350.0)\nloading_300_t = loading.(toth, p_range, 300.0)\nΔH_350_t = isosteric_heat.(toth, p_range, 350.0)\nΔH_300_t = isosteric_heat.(toth, p_range, 300.0)\nplot(loading_300_t/toth.M, ΔH_300_t, framestyle=:box, title = \"Toth\", xlabel = \"covered fraction\", ylabel = \"ΔH (J/mol)\", label = \"Automatic Differentiation - 300 K\")\nplot!(loading_350_t/toth.M, ΔH_350_t, framestyle=:box, label = \"Automatic Differentiation - 350 K\")\n\nfunction Q_st1(model::Toth, n1, T)\n    E1 = model.E\n    β = model.β\n    R = 8.31446261815324  # Assuming Rgas gives the gas constant for the type of T\n    f = model.f₀ - model.β / T\n    n1_0 = model.M  # Assuming saturation loading as reference loading\n\n    # Calculate the two terms inside the brackets in the equation\n    term1 = log.(n1 ./ n1_0) ./ (1 .- (n1 ./ n1_0).^f)\n    term2 = log.((n1 ./ n1_0) ./ (1 .- (n1 ./ n1_0).^f).^(1/f))\n\n    # Calculate Q_st1 using the main formula\n    Q_st1_value = E1 .+ (β * R / f) * (term2 .- term1)\n    return Q_st1_value\nend\n\nΔH_analytical = Q_st1(toth, loading_350_t, 350.0)\n\nscatter!(loading_350_t/toth.M, ΔH_analytical,\n label = \"Analytical - 350 K\", m = (3, :white, stroke(1, :red)))","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"It can be noticed that the isosteric heat for the Toth isotherm blows for high surface coverages. ","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"Multi-site Langmuir can also account for surface heterogeneity. Below you can see the behavior of the isosteric heat as a function of the surface coverage.","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"using Langmuir, Plots #hide\ndualsite = MultiSite(LangmuirS1(2.337, 6.6e-11, 8.3144*-5340.87),\n LangmuirS1(3.490, 3.4e-11, 8.3144*-4273.13))\np_range = 1e-5:500.0:10*101325.0 |> collect\nloading_270 = loading.(dualsite, p_range, 270.0)\nloading_350 = loading.(dualsite, p_range, 350.0)\nΔH_270 = isosteric_heat.(dualsite, p_range, 270.0)\nΔH_350 = isosteric_heat.(dualsite, p_range, 350.0)\nplot(loading_270/(2.337 + 3.490), ΔH_270, framestyle=:box, title = \"Dualsite Langmuir\", xlabel = \"covered fraction\", ylabel = \"ΔH (J/mol)\", label = \"270 K\")\nplot!(loading_350/(2.337 + 3.490), ΔH_350, framestyle=:box, label = \"350 K\")","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"It can bee seen that the isosteric heat presents an s-shape varying from more energetic to less energetic sites.","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"Some literature points that these behaviors are non-physical and potentially problematic when trying to model thermal effects in adsorption.","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"To overcome it, the adsorption Nonrandom Two-Liquid (aNRTL) activity coefficient model into an activity-based formulation for Langmuir isotherm, Chang et al. 2020 proposed a thermodynamic Langmuir (tL) which seems to have superior properties for predicting the isosteric heat compared to Toth and Multisite Langmuir.","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"The equation for the loading n_i in terms of gamma_i and gamma_phi is:","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"n_i = fracM K_i Pfracgamma_igamma_phi + K_i P","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"where K_i is also a function of temperature K_i = K_i^circexpfrac-ERT, and the activity coefficients gamma_i and gamma_phi are given by:","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"gamma_i = expleft(fracd fracg^ERTd theta_iright)","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"gamma_phi = expleft(fracd fracg^ERTd theta_phiright)","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"The Gibbs excess free energy term, fracg^ERT, is expressed as:","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"fracg^ERT = fractheta_i theta_phi tau_iphi (G_iphi - 1)theta_i G_iphi + theta_phi","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"where, B_iphi is a model parameter, tau_iphi = B_iphi  T, G_iphi = exp(-03 cdot tau_iphi).","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"Here, theta_i and theta_phi are the coverage terms for the adsorbed species and adsorption sites,  respectively (theta_i  + theta_phi = 1), and T is the temperature.","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"Below you can see how to iniatilize the thermodynamic langmuir model in Langmuir.jl and use it to predict the loading and isosteric heat.","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"using Langmuir, Plots #hide\ntlang = ThermodynamicLangmuir(5.890, 6.1e-11, -4599.86*8.3144, -762.51)\np_range = 1e-5:500.0:10*101325.0 |> collect\nloading_270 = loading.(tlang, p_range, 270.0)\nloading_350 = loading.(tlang, p_range, 350.0)\nΔH_270 = isosteric_heat.(tlang, p_range, 270.0)\nΔH_350 = isosteric_heat.(tlang, p_range, 350.0)\nplot(loading_270/tlang.M, ΔH_270, framestyle=:box, xlabel = \"covered fraction\", ylabel = \"ΔH (J/mol)\", title = \"tLangmuir\", label = \"270 K\")\nplot!(loading_350/tlang.M, ΔH_350, framestyle=:box, label = \"350 K\")\nplot!([minimum(loading_270), maximum(loading_270)]./tlang.M,  [-4599.86*8.3144, -4599.86*8.3144], label = \"Langmuir\")","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"It is evident that the thermodynamic Langmuir model exhibits behavior that is notably different from both the Toth and multisite Langmuir models. As highlighted in existing literature, the thermodynamic Langmuir model offers more accurate estimates of isosteric heat while maintaining high predictive accuracy for equilibrium loading. It can also be use to predict binary adsorption. ","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"Analytical expressions for the isosteric heat can become quite extensive. In fact, there is an entire manuscript dedicated to deriving such expressions for a number of isotherms. ","category":"page"},{"location":"tutorials/isosteric_heat/","page":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","title":"Comparing the estimation of isosteric heat from isotherms with Langmuir.jl","text":"In Langmuir.jl, we leverage automatic differentiation to get accurate estimates of the required derivatives for the isosteric heat without requiring such extensive derivations.","category":"page"},{"location":"models/models/#supported_models","page":"Supported models","title":"Supported Isotherms","text":"","category":"section"},{"location":"models/models/","page":"Supported models","title":"Supported models","text":"Here you can find the list of supported isotherm models.","category":"page"},{"location":"models/models/","page":"Supported models","title":"Supported models","text":"Pages = [\"models.md\"]","category":"page"},{"location":"models/models/","page":"Supported models","title":"Supported models","text":"Pages = [\"models.md\"]","category":"page"},{"location":"models/models/#No-parameter-Isotherm-Models","page":"Supported models","title":"No-parameter Isotherm Models","text":"","category":"section"},{"location":"models/models/#Langmuir.ZeroIsotherm","page":"Supported models","title":"Langmuir.ZeroIsotherm","text":"`ZeroIsotherm()`\n\nZeroIsotherm <: IsothermModel\n\nZeroIsotherm represents an isotherm that has no adsorption. it can be used to define carrier gases.\n\nDescription\n\nA zero isotherm is defined by:\n\nn = 0\n\nwhere:\n\nn is the loading of the adsorbate on the adsorbent\n\n\n\n\n\n","category":"type"},{"location":"models/models/#One-parameter-Isotherm-Models","page":"Supported models","title":"One-parameter Isotherm Models","text":"","category":"section"},{"location":"models/models/#Langmuir.Henry","page":"Supported models","title":"Langmuir.Henry","text":"`Henry(Kh, E)`\n\nHenry <: IsothermModel\n\nInputs\n\nKh::T: Affinity parameter, or Henry’s constant at T → ∞ [mol/kg/Pa]\nE::T: Adsorption energy, [J/mol]\n\nDescription\n\nThe Henry isotherm model describes the adsorption of gases on solid surfaces at low pressures, where the amount of adsorbate adsorbed is directly proportional to the pressure of the gas. This model is typically valid in the low-pressure limit of adsorption, where the adsorption sites are far from saturation and the interactions between adsorbed molecules are negligible.\n\nThe adsorption behavior follows Henry's law:\n\nn = K * p\n\nThe energy parameter E is related to Henry's constant Kh by the equation:\n\nK = Kh*exp(-E / (R * T))\n\nWhere:\n\nR is the universal gas constant, [J/mol/K],\nT is the temperature, [K].\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Three-parameter-Isotherm-Models","page":"Supported models","title":"Three-parameter Isotherm Models","text":"","category":"section"},{"location":"models/models/#Langmuir.LangmuirS1","page":"Supported models","title":"Langmuir.LangmuirS1","text":"`LangmuirS1(M, K₀, E)`\n\nLangmuirS1 <: IsothermModel\n\nLangmuirS1(M, K₀, E) represents the single site Langmuir isotherm model.\n\nInputs\n\nM::T: Saturation loading, [mol/kg]\nK₀::T: Affinity parameter at T → ∞, [1/Pa]\nE::T: Adsorption energy, [J/mol]\n\nDescription\n\nThe LangmuirS1 equation is given by:\n\nn = (M * K * p) / (1 + K * p)\n\nThe adsorption energy E is related to the equilibrium constant K₀ by the equation:\n\nK = K₀*exp(-E / (R * T))\n\nwhere:\n\nR is the gas constant,\nT is the temperature.\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Four-or-more-parameter-Isotherm-Models","page":"Supported models","title":"Four or more parameter Isotherm Models","text":"","category":"section"},{"location":"models/models/#Langmuir.Freundlich","page":"Supported models","title":"Langmuir.Freundlich","text":"`Freundlich(K₀, f₀, β, E)`\n\n Freundlich <: IsothermModel\n\nInputs\n\nK₀::T: Affinity parameter at T → ∞, [1/Pa]\nf₀::T: Surface heterogeneity parameter at T → ∞, [-]\nβ::T: Surface heterogeneity coefficient [K]\nE::T: Adsorption energy, [J/mol]\n\nDescription\n\nThe Freundlich isotherm is given by:\n\nn = K_f × pᶠ\n\nThe affinity parameter K_f is a temperature dependent and can be linked to adsorption energy E by:\n\nK_f = K₀ × exp(-E / (RT))\n\nThe exponent f is also temperature dependent and can be expressed as: \n\nf = f₀ - β/T\n\nWhere:\n\nR is the gas constant,\nT is the temperature.\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Langmuir.RedlichPeterson","page":"Supported models","title":"Langmuir.RedlichPeterson","text":"`RedlichPeterson(M, K₀, E, f₀, β)`\n\nRedlichPeterson <: IsothermModel\n\nInputs\n\nM::T: Saturation loading, [mol/kg]\nK₀::T: Affinity parameter at T → ∞, [Pa]¹/ᶠ\nE::T: Adsorption energy, [J/mol]\nf₀::T: Surface heterogeneity parameter at T → ∞, [-]\nβ::T: Surface heterogeneity coefficient, [K]\n\nDescription\n\nThe RedlichPeterson equation is given by:\n\nn = M * p / (1 + K₀ * p^f)\n\nThe adsorption energy E is related to the equilibrium constant K₀ by the equation:\n\nK = K₀ × exp(-E / (R * T))\n\nThe exponent f is also temperature dependent and can be expressed as: \n\nf = f₀ - β/T\n\nwhere:\n\nR is the gas constant,\nT is the temperature.\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Langmuir.Toth","page":"Supported models","title":"Langmuir.Toth","text":"`Toth(M, K₀, E, f₀, β)`\n\nToth <: IsothermModel\n\nInputs\n\nM::T: Saturation loading, [mol/kg]\nK₀::T: Affinity parameter at T → ∞, [Pa⁻¹]\nE::T: Adsorption energy, [J/mol]\nf₀::T: Surface heterogeneity parameter at T → ∞, [-]\nβ::T: Surface heterogeneity coefficient, [K]\n\nDescription\n\nToth isotherm model: \n\nn = MKP/(1 + (K*P)ᶠ)¹/ᶠ\n\nThe adsorption energy E is related to the equilibrium constant K₀ by the equation:\n\nK = K₀ × exp(-E / (R * T))\n\nThe exponent f is also temperature dependent and can be expressed as: \n\nf = f₀ - β/T\n\nwhere:\n\nR is the gas constant,\nT is the temperature.\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Langmuir.Unilan","page":"Supported models","title":"Langmuir.Unilan","text":"`Unilan(M, K₀, E, f₀, β)`\n\nUnilan <: IsothermModel\n\nInputs\n\nM::T: Saturation loading, [mol/kg]\nK₀::T: Affinity parameter at T → ∞, [Pa⁻⁻¹]`\nE::T: Adsorption energy, [J/mol]\nf₀::T: Surface heterogeneity parameter at T → ∞, [-]\nβ::T: Surface heterogeneity coefficient, [K]\n\nDescription\n\nThe UNILAN equation is given by:\n\nn = M * log((1 + K* exp(f) * p)/(1 + K * exp(-f) * p)) / (2 * f)\n\nThe adsorption energy E is related to the equilibrium constant K₀ by the equation:\n\nK = K₀ × exp(-E / (R * T))\n\nThe surface heterogeneity parameter f is also temperature-dependent and can be expressed as:\n\nf = f₀ - β / T\n\nwhere:\n\nR is the gas constant,\nT is the temperature.\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Langmuir.Quadratic","page":"Supported models","title":"Langmuir.Quadratic","text":"`Quadratic(K₀a, K₀b, M, Ea, Eb)`\n\nQuadratic <: IsothermModel\n\nInputs\n\nK₀a::T: Affinity parameter A at T → ∞, [1/Pa]\nK₀b::T: Affinity parameter B at T → ∞, [1/Pa^2]\nM::T: Saturation loading, [mol/kg]\nEa::T: Adsorption energy A, [J/mol]\nEb::T: Adsorption energy B, [J/mol]\n\nDescription\n\nThe Quadratic isotherm model is given by:\n\nn = M × (Ka + 2Kb × p) × p / (1 + p × (Ka + Kb × p))\n\nThe model assumes that the affinity parameters Ka and Kb are temperature-dependent and follow the relation:\n\nKa = K₀a * exp(-Ea / (RT))\n\nKb = K₀b * exp(-Eb / (RT))\n\nWhere:\n\nKa and Kb are the affinity parameters at temperature T,\nR is the gas constant,\nT is the absolute temperature.\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Langmuir.BrunauerEmmettTeller","page":"Supported models","title":"Langmuir.BrunauerEmmettTeller","text":"`BrunauerEmmettTeller(K₀a, K₀b, M, E)`\n\nBrunauerEmmettTeller <: IsothermModel\n\nThe Brunauer-Emmett-Teller (BET) isotherm model describes multilayer adsorption on a homogeneous surface. It is widely used to characterize adsorption behavior in mesoporous materials.\n\nInputs\n\nK₀a::T: Affinity parameter A at T → ∞, [1/Pa]\nK₀b::T: Affinity parameter A at T → ∞, [1/Pa]\nM::T: Saturation loading, [mol/kg]\nE::T: Adsorption energy, [J/mol]\n\nDescription\n\nThe BET equation is given by:\n\nn = M × K₀a × p / (1 - K₀b × p) × (1 + (K₀a - K₀b) × p)\n\nTemperature dependence:\n\nThe affinity parameters K₀a and K₀b depend on temperature and are given by the following expressions:\n\nK₀a = K₀a × exp(-E / (RT))\n\nK₀b = K₀b × exp(-E / (RT))\n\nWhere:\n\nR is the gas constant,\nT is the absolute temperature.\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Langmuir.Sips","page":"Supported models","title":"Langmuir.Sips","text":"`Sips(M, K₀, E, f₀, β)`\n\nSips <: IsothermModel\n\nInputs\n\nM::T: Saturation loading, [mol/kg]\nK₀::T: Affinity parameter at T → ∞, [Pa⁻¹]\nE::T: Adsorption energy, [J/mol]\nf₀::T: Surface heterogeneity parameter at T → ∞, [-]\nβ::T: Surface heterogeneity coefficient, [K]\n\nDescription\n\nThe Sips equation is given by:\n\nn = M * (K * p)ᶠ / (1 + (K * p)ᶠ)\n\nThe adsorption energy E is related to the equilibrium constant K₀ by the equation:\n\nK = K₀ × exp(-E / (R * T))\n\nThe exponent f is also temperature dependent and can be expressed as: \n\nf = f₀ - β/T\n\nwhere:\n\nR is the gas constant,\nT is the temperature.\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Langmuir.LangmuirFreundlich","page":"Supported models","title":"Langmuir.LangmuirFreundlich","text":"`LangmuirFreundlich(M, K₀, E, f₀, β)`\n\nLangmuirFreundlich <: IsothermModel\n\nInputs\n\nM::T: Saturation loading, [mol/kg]\nK₀::T: Affinity parameter at T → ∞, [1/Pa]\nE::T: Adsorption energy, [J/mol]\nf₀::T: Surface heterogeneity parameter at T → ∞, [-]\nβ::T: Surface heterogeneity coefficient, [K]\n\nDescription\n\nThe Langmuir-Freundlich form of the isotherm is:\n\nn = M × K × pᶠ /(1 + K × pᶠ)\n\nWhere:\n\nn is the loading of the adsorbate on the adsorbent,\n\nTemperature dependence:\n\nThe affinity parameter K is temperature-dependent and can be expressed as:\n\nK = K₀ × exp(-E / (RT))\n\nThe surface heterogeneity parameter f is also temperature-dependent and can be expressed as:\n\nf = f₀ - β / T\n\nWhere:\n\nR is the gas constant,\nT is the absolute temperature.\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Langmuir.MultiSite","page":"Supported models","title":"Langmuir.MultiSite","text":"MultiSite(isotherms::Vararg{IsothermModel}...)\n\ngiven a list of isotherms, create a multisite isotherm model.\n\nmodel1 = LangmuirS1(3.0,1.0,0.0)\nmodel2 = LangmuirS1(3.0,0.9,3000.0)\ndouble_site_LangmuirS1 = MultiSite(model1,model2) #create a multisite model with two LangmuirS1 isotherms\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Langmuir.ThermodynamicLangmuir","page":"Supported models","title":"Langmuir.ThermodynamicLangmuir","text":"ThermodynamicLangmuir(M, K₀, E, Bᵢᵩ)\n\nThe ThermodynamicLangmuir struct represents a thermodynamic Langmuir model with activity coefficients calculated using an aNRTL-like approach.\n\nParameters\n\nM: Saturation loading [mol/kg]\nK₀: Affinity parameter at high temperature [1/Pa]\nE: Adsorption energy [J/mol]\nBᵢᵩ: Interaction energy parameter between adsorbate species i and vacant sites [J/mol]\n\nDescription\n\nThe Langmuir equation is given by:\n\nnᵢ = (M * K * P) / (γᵢ/γᵩ + K * P)\n\nwhere nᵢ is the adsorbed amount of species i, K is calculated as:\n\nK = K₀ * exp(-E / (R * T))\n\nwhere:\n\nR is the gas constant\nT is the temperature\n\nThe activity coefficients γᵢ and γᵩ are determined using the Gibbs excess free energy, gᴱ/RT, which is calculated based on the surface fractions (θᵢ, θᵩ) and interaction parameters derived from Bᵢᵩ. This free energy value is used in the activity_coefficient function to compute the activity coefficients of the adsorbate and phantom molecules.\n\n\n\n\n\n","category":"type"},{"location":"tutorials/tutorial/#Tutorial","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"","category":"section"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"In this tutorial, we will go through a typical workflow for processing and analyzing adsorption equilibrium data:","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"Loading adsorption data for the pure components in the mixture of interest.\nFitting an isotherm for each component.\nAnalyzing the fitting quality by:\nPlotting predictions vs. experimental data.\nPerforming residual analysis.\nEstimating single-component properties such as the isosteric heat of adsorption.\nEstimating multicomponent adsorption loading using the Ideal Adsorbed Solution Theory (IAST).","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"For this tutorial, we will work with a binary system consisting of ethane and ethylene. The goal is to investigate their adsorption properties in DUT-8, a material known for being ethane-selective.","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"This case study is based on the research presented in the following paper:","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"Reference: Santana, V. V., Carmo, P., Seabra, R., Rodrigues, A. E., Ribeiro, A. M., Nogueira, I. B. R., Yoon, J. W., Cho, K. H., Yun, J. S., Lee, U.-H., Kim, K., Ferreira, A. F. P. (2024). Ethylene Purification by Pressure Swing Adsorption with the Paraffin Selective Metal–Organic Framework─DUT-8. Industrial & Engineering Chemistry Research, 63(5), 2307–2319. DOI: 10.1021/acs.iecr.3c02808.","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"Ethane and ethylene data are stored in  ethane_tpl_data.csv and ethylene_tpl.csv files. To read csv files, many options are available in Julia. Here, we will use DelimitedFiles.jl. We also use the isotherm_data function to wrap the data into a format suitable for processing the data with Langmuir.jl. The data files contain pressure, loading, and temperature information for each component. Note that keeping this order is crucial for the isotherm_data function to work correctly.","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"In the file, pressure unit is in bar, temperature in Kelvin and loading in mmol/g or mol/kg. ","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"Let's read and visualize the isotherms at the different temperatures. You can use a custom plotting function to visualize the data by calling plot(data, temperature). This function will plot the pressure against the loading for a given temperature.","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"using Plots, DelimitedFiles, Langmuir\nethane_data_path = joinpath(@__DIR__, \"sample_data/ethane_tpl_data.csv\")\nethylene_data_path = joinpath(@__DIR__, \"sample_data/ethylene_tpl_data.csv\")\nethane_data = readdlm(ethane_data_path, ',')\nP_ethane = ethane_data[:, 2]*1e5 # Convert bar to Pa\nT_ethane = ethane_data[:, 1]\nl_ethane = ethane_data[:, 3]\nd_ethane = isotherm_data(P_ethane, l_ethane, T_ethane)\n\nethylene_data = readdlm(ethylene_data_path, ',')\nP_ethylene = ethylene_data[:, 2]*1e5 # Convert bar to Pa\nT_ethylene = ethylene_data[:, 1]\nl_ethylene = ethylene_data[:, 3]\nd_ethylene = isotherm_data(P_ethylene, l_ethylene, T_ethylene) #Alwas read in order of Pressure, Loading, Temperature\n\nfigsize = (500, 500/1.618)\nplot(d_ethane, 283.0, label = \"Ethane at 283K\", m = (3, :white, stroke(1, :blue)), size = figsize, xlabel = \"Pressure (Pa)\", ylabel = \"Loading (mol/kg)\", markershape = :circle)\nplot!(d_ethane, 323.0, label = \"Ethane at 323K\", markershape = :square, m = (3, :white, stroke(1, :blue)))\n\nplot!(d_ethylene, 283.0, label = \"Ethylene at 283K\", markershape = :circle, \nm = (3, :white, stroke(1, :red)))\nscatter!(d_ethylene, 323.0, label = \"Ethylene at 323K\",\nmarkershape = :square, m = (3, :white, stroke(1, :red)))","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"Following the reference manuscript, the quadratic isotherm is the chosen model for fitting the data. In this tutorial, the same strategy is used. Note that the bounds for the parameters were be manually set since the default ones were too large. Once the bounds are custom, you also need to provide the initial guess. We have default initial guesses for each isotherm, but to expose it, you need to import the x0_guess_fit function. We also import the to_vec function to convert the initial guess into a vector format, which is required by the fitting problem.","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"Also observe that the argument next to d_ethane is nothing. This is because the fitting problem does not involve any additional data, such as calorimetric data, to estimate the isotherm parameters.","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"import Langmuir: x0_guess_fit, to_vec\n#Fitting ethane\nx0_ethane = to_vec(x0_guess_fit(Quadratic, d_ethane))\nlb_ethane = (1e-25, 1e-25, 1e-4, -80_000.0, -80_000.0)\nub_ethane = (1e-1, 1e-1, 100., -1_000.0, -1_000.0)\n\nprob_ethane = IsothermFittingProblem(Quadratic{eltype(d_ethane)}, d_ethane, nothing, abs2, x0_ethane, lb_ethane, ub_ethane) #Bounds have to be manually tweaked. Default interval is too large\nalg = DEIsothermFittingSolver(max_steps = 500, population_size = 150,\nlogspace = true, verbose = true)\nloss_fit_ethane, ethane_isotherm = fit(prob_ethane, alg)\nprintln(\"Fitting loss for ethane is $loss_fit_ethane\")\nprintln(ethane_isotherm)","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"The fitting results can be visualized by plotting the isotherm predictions against the experimental data. The plot! function can be used to overlay the fitted isotherm on the experimental data. This is also a custom case of the plot function from the Plots.jl to facilitate the visualization of isotherms. You can use it to plot the isotherm predictions for a specific temperature and pressure range. ","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"#Plotting ethane fitting\nplot!(ethane_isotherm, 283.0, (0.0, maximum(P_ethane)), \ncolor = :blue, label = \"Quadratic Ethane - 283.0 K\", linestyle = :dash)\nplot!(ethane_isotherm, 323.0, (0.0, maximum(P_ethane)), \ncolor = :blue, label = \"Quadratic Ethane - 323.0 K\")","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"#Fitting Ethylene\nx0_ethylene = to_vec(x0_guess_fit(Quadratic, d_ethylene))\nlb_ethylene = (1e-25, 1e-25, 1e-4, -80_000.0, -80_000.0)\nub_ethylene = (1e-1, 1e-1, 100., -500.0, -500.0)\nprob_ethylene = IsothermFittingProblem(Quadratic{eltype(d_ethylene)}, d_ethylene, nothing, abs2, x0_ethylene, lb_ethylene, ub_ethylene)\nloss_fit_ethylene, ethylene_isotherm = fit(prob_ethylene, alg)\nprintln(\"Fitting loss for ethane is $loss_fit_ethylene\")\nprintln(ethylene_isotherm)","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"#Plotting ethylene isotherms\nplot!(ethylene_isotherm, 283.0, (0.0, maximum(P_ethane)),\nlabel = \"Quadratic Ethylene - 283.0 K\", linestyle = :dash, color = :red)\nplot!(ethylene_isotherm, 323.0, (0.0, maximum(P_ethane)),\nlabel = \"Quadratic Ethylene - 283.0 K\", color = :red)","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"From the fitting results, the isotherm parameters closely match those reported in the reference manuscript. For example, the parameter M was estimated at 3.68 in the manuscript, while it is 3.64 in this analysis. However, the energy parameters exhibit a greater discrepancy. Without calorimetric data, it's challenging to determine the accuracy of these values, as parameter identifiability is limited when relying solely on loading data.","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"#Ethane isosteric heat\nis_283K = d_ethane.T .== 283.0\nP_C₂_283K = d_ethane.p[is_283K]\nl_C₂_283K = d_ethane.l[is_283K]\nΔH_C₂_283K = isosteric_heat.(ethane_isotherm, P_C₂_283K, 283.0)\n\n#Ethylene isosteric heat\nis_283K_ethylene = d_ethylene.T .== 283.0\nP_C₂₌_283K = d_ethylene.p[is_283K_ethylene]\nl_C₂₌_283K = d_ethylene.l[is_283K_ethylene]\nΔH_C₂₌_283K = isosteric_heat.(ethylene_isotherm, P_C₂₌_283K, 283.0) \n\nscatter(l_C₂_283K, ΔH_C₂_283K, xlabel = \"Loading (mol/kg)\", ylabel = \"Isosteric Heat (J/mol)\", m = (4, :white, stroke(1, :lightslateblue)), markershape = :circle, label = \"Ethane - 283.0 K\", size = (600, 300))\nscatter!(l_C₂₌_283K, ΔH_C₂₌_283K, xlabel = \"Loading (mol/kg)\", ylabel = \"Isosteric Heat (J/mol)\", markershape = :square, m = (3, :white, stroke(1, :springgreen2)), label = \"Ethylene - 283.0 K\")","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"The plot shows the isosteric heat of adsorption for ethane and ethylene at 283.0 K as a function of loading. Ethane exhibits a steeper decline in adsorption heat, suggesting stronger initial interactions that weaken significantly as loading increases, whereas ethylene's decline is more gradual, indicating a slower reduction in adsorption strength. ","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"Lastly, the final analysis will utilize IAST to make predictions on the binary adsorption of ethane and ethylene. There are two ways to use IAST in Langmuir.jl.  You can directly use the iast function, which gives you access to extra solution parameters such as convergence criteria, total loading and composition. Another way is to wrap the isotherms into the IASTModels type and use it to estimate quantities such as the loading and the isosteric heat. Below, we are using the first approach, which is more straightforward for this case.","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"y_C₂ = range(0.0, 1.00, 51) #51 points from 0.0 to 1.0\nsuccess_y_C₂ = []\nx_C₂ = []\nx_C₂₌ = []\np = 1*101325.0\nT = 303.0\nfor y_C₂_ᵢ in y_C₂\n   y = [y_C₂_ᵢ, (1.0 - y_C₂_ᵢ)]\n   models = [ethane_isotherm, ethylene_isotherm]\n   (n_total, x, is_success) = iast(models, p, T, y, FastIAS(), maxiters = 1500, abstol = 1e-10, reltol = 1e-10)\n\n   if is_success == :success\n      println(is_success)\n\n      push!(x_C₂, x[1])\n      push!(x_C₂₌, x[2])\n      push!(success_y_C₂, y_C₂_ᵢ)\n\n      else\n\n      nothing\n\n   end\nend\n\nplot(x_C₂, success_y_C₂, xlabel = \"x (adsorbed phase)\", ylabel = \"y (gas phase)\", label = \"ethane\", framestyle=:box, size = (600, 300))\nplot!(x_C₂₌, 1.0 .- success_y_C₂, label = \"ethylene\")","category":"page"},{"location":"tutorials/background/#Models-in-adsorption-equilibrium","page":"Background","title":"Models in adsorption equilibrium","text":"","category":"section"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"Adsorption is a surface phenomenon where atoms, ions, or molecules from a gas, liquid, or dissolved solid adhere to the surface of another material. This process leads to the formation of a thin film of the adsorbed substance, known as the adsorbate, on the surface of the material it adheres to, called the adsorbent.","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"In thermodynamics, adsorption models play a similar role to equations of state in fluid systems, describing the equilibrium properties of adsorption processes. These models are crucial for understanding and predicting the thermodynamics of adsorption in both single and multicomponent systems.","category":"page"},{"location":"tutorials/background/#Single-component-adsorption","page":"Background","title":"Single-component adsorption","text":"","category":"section"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"Over the last decade, three fundamental approaches have led to the development of a wide range of adsorption isotherm models, including well-known ones such as Langmuir, Freundlich, Dubinin-Radushkevich, Temkin, Toth, and many others.","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"The first approach focuses on kinetics, where adsorption and desorption rates are equal, establishing adsorption equilibrium as a dynamic process. The second approach is rooted in thermodynamics, offering a basis for deriving various forms of adsorption isotherm models. The third approach emphasizes the generation of characteristic curves to describe adsorption behavior.","category":"page"},{"location":"tutorials/background/#Isosteric-heat-of-adsorption","page":"Background","title":"Isosteric heat of adsorption","text":"","category":"section"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"The heat of adsorption is a critical design parameter in adsorptive gas separation units. During adsorption, heat is released as adsorbate molecules transition to a lower energy state on the surface of the adsorbent compared to their higher energy state in the bulk gas phase. This exothermic process significantly impacts both the efficiency and operational conditions of adsorption systems. For a single component, the isosteric heat is given by:","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"Q_st = T*(V_g - V_a)*left( fracdP_idT right)rvert_(N_iA)","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"where Q_st is the isosteric heat of the component being adsorbed, T is the temperature, V_g is the molar volume of the component in gas phase, V_a is the molar volume of the component in adsorbed phase, N_i is the amount of component adsorbed of the component","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"When the isotherm is of the form N_i = f(T P_i), one can write:","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"Q_st i = T cdot (V_g - V_a) cdot left( fracpartial N_i  partial T mid P_ipartial N_i  partial P mid T right)","category":"page"},{"location":"tutorials/background/#Multi-component-adsorption","page":"Background","title":"Multi component adsorption","text":"","category":"section"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"The basic equations of the IAST are the analogue of Raoult's law in vapour–liquid equilibrium:","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"Py_i = P_i^0(pi)x_i","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"where","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"pi = pi_i = int_0^P_i^0 fracN_i^0(P)PdP","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"for i = 1N_c ","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"sum_i^N_c x_i = 1","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"Combining the two above equations, the following nonlinear solve is set:","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"f(pi) = 1-sum_1^N_cfracPy_iP_i^0left(piright) = 0","category":"page"},{"location":"tutorials/getting_started/#getting_started","page":"Getting Started","title":"Getting Started with Langmuir.jl","text":"","category":"section"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"This is an introductory tutorial for Langmuir.jl. We will demonstrate the basics of the package by building an isotherm model and estimating properties with it.","category":"page"},{"location":"tutorials/getting_started/#Installing-Langmuir.jl","page":"Getting Started","title":"Installing Langmuir.jl","text":"","category":"section"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"To install Langmuir, use the Julia package manager. This will install the latest release of the package in the Julia package registry.","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Pkg; Pkg.add(\"Langmuir\")","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"If you want to install the latest development version, you can do so by using the following command:","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Pkg; Pkg.add(url = \"https://github.com/ClapeyronThermo/Langmuir.jl\")","category":"page"},{"location":"tutorials/getting_started/#Initializing-an-IsothermModel-and-estimating-properties-for-single-component-adsorption","page":"Getting Started","title":"Initializing an IsothermModel and estimating properties for single component adsorption","text":"","category":"section"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"In this package, we support several isotherm models. You can refer to the list of supported models here. Here is how you construct a LangmuirS1 model.","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Langmuir #hide\nM = 1.913 # mol.kg⁻¹\nK₀ = 6.82e-10 # Pa⁻¹\nE  = -21_976.40 # J.mol⁻¹\nisotherm = LangmuirS1(M, K₀, E)","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"You can use a instantiated model to estimate the equilibrium properties of the adsorption system. To estimate the loading (amount of adsorbate per mass of adsorbent) in the adsorbent, given the temperature T and pressure p, you can do as follows:","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"p = 101325.0\nT = 298.15\nl = loading(isotherm, p, T)","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"When estimating loading with a model, it is common to plot isotherms, i.e., pressure vs loading for a fixed temperature. To do it, you can use custom plot call to visualize isotherms using plot(isotherm, T, P_range), where T is the temperature you want to analyze, P_range is a Tuple specifying minimum and maximum of the range. Below is an example of how to plot two isotherms at two different temperatures.","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Plots #hide\np_range = (0.0, 1e5)\nplot(isotherm, 300.0, p_range)\nplot!(isotherm, 400.0, p_range)","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"To finish this section for single component adsorption, one can also estimate the isosteric heat of adsorption by calling isosteric_heat(model, Vg, p, T) where Vg is the molar volume of the gas phase, p the pressure in Pascal and T the temperature in Kelvin. For the Langmuir model, the isosteric heat should be constant and equal to the energy parameter E. You can plot the isosteric heat either as a function of the pressure or loading.","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"Both the loading and isosteric_heat functions were made to accept scalar arguments. But they can be used to estimate the loading and isosteric heat for a range of pressures with the broadcasting Julia syntax (you insert a dot after the function name) loading.(model, p, T) where p is an iterable (Vector or Tuple). ","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"P = 0.0:1000.0:1e5 # A range of pressures from 0 to 100 kPa\nΔH = round.(isosteric_heat.(isotherm, P[2:end], 300.0), digits = 8)#Calculates the isosteric heat for a range of pressures\nl_at_300 = loading.(isotherm, P[2:end], 300.0) #Calculates the loading at 300 K for a range of pressures since this is a more common visualization\nscatter(l_at_300, ΔH, size = (500, 250),  ylabel = \"Isosteric heat (J/mol)\", xlabel = \"loading (mol/kg)\", label = \"Estimated isosteric heat with AD\")\nplot!([first(l_at_300), last(l_at_300)], [E, E], label = \"Expected value\") ","category":"page"},{"location":"tutorials/getting_started/#Estimating-properties-in-multicomponent-adsorption.","page":"Getting Started","title":"Estimating properties in multicomponent adsorption.","text":"","category":"section"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"When it comes to estimating properties in multicomponent adsorption, the Ideal Adsorption Solution Theory (IAST) has been proven accurate for a number of systems. It allows one to estimate multicomponent adsorption behavior from single component isotherms.","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"When formulated, estimating the loading with IAST becomes a nonlinear solve problem which can be solved in different ways. Here, we support the Nested Loop and FastIAS methods. To know more about the two and which one to choose, refer to this paper: 10.1002/aic.14684.","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"It can be shown analytically that IAST estimation of multicomponent loading is the same as the extendend Langmuir method when the parameter M_i (saturation loading) are the same for all components, i.e., M_1 = M_2 =  = M_N_c. The extended langmuir has the form n_i = fracM_i times K_i0 expfracDelta HRT1 + sum_i K_i times P_i. Below you can see a numerical verification of IAST for that condition.","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Langmuir\nisotherm_1 = LangmuirS1(1.913, 6.82e-10, -21_976.40)\nisotherm_2 = LangmuirS1(1.913, 1.801e-9, -16_925.01)\niastmodel = IASTModels(isotherm_1, isotherm_2)\next_langmuir = ExtendedLangmuir(isotherm_1, isotherm_2)\nloading_1, loading_2 = loading(iastmodel, 101325.0, 300., [0.5, 0.5])\n\n\nloading_1_expected, loading_2_expected = loading(ext_langmuir, 101325.0, 300., [0.5, 0.5])\n \n\nprintln(\"IAST estimated loading for component 1 is: \", round(loading_1, digits = 12))\nprintln(\"Extended langmuir estimated loading for component 1 is: \", round(loading_1_expected, digits = 12))","category":"page"},{"location":"reference/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"reference/#Contents","page":"Reference","title":"Contents","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/#Index","page":"Reference","title":"Index","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/#Langmuir.isosteric_heat","page":"Reference","title":"Langmuir.isosteric_heat","text":"isosteric_heat(model::IsothermModel, Vᵍ, p, T; Vᵃ = zero(eltype(model))) -> Qₛₜ\n\nCalculate the isosteric heat of adsorption for a given isotherm model.\n\nArguments\n\nmodel::IsothermModel: The isotherm model used to describe the adsorption process.\nVᵍ: The molar volume of the gas phase.\nVᵃ: The molar volume of the adsorbed phase (typically Vᵃ << Vᵍ; default is zero).\np: Pressure at which the isosteric heat is evaluated.\nT: Temperature at which the isosteric heat is evaluated.\n\nReturns\n\nQₛₜ: The estimated isosteric heat of adsorption.\n\nDescription\n\nThe function estimates the isosteric heat of adsorption Qₛₜ for a single component using its isotherm and the Clausius-Clapeyron equation:\n\nQₛₜ = -T * (Vᵍ - Vᵃ) * (∂n/∂T)ₚ / (∂n/∂p)ₜ\n\nwhere:\n\nn is the loading,\nVᵍ is the molar volume of the gas phase,\nVᵃ is the molar volume of the adsorbed phase,\nT is the temperature,\np is the pressure.\n\nThis equation is derived based on the Clausius-Clapeyron relation, which relates the temperature dependence of the loading to the isosteric heat.\n\nReferences:\n\nPan, H., Ritter, J. A., & Balbuena, P. B. (1998). Examination of the approximations used in determining the isosteric heat of adsorption from the Clausius−Clapeyron equation. Langmuir: The ACS Journal of Surfaces and Colloids, 14(21), 6323–6327. doi:10.1021/la9803373\n\n\n\n\n\n","category":"function"},{"location":"reference/#Langmuir.pressure","page":"Reference","title":"Langmuir.pressure","text":"pressure(model::IsothermModel, x, T, f)\n\ngiven an isotherm::IsothermModel and x = f(model,p,T), find p such that f(model,p,T) = x. There are two options for f and x:\n\nwhen f is sp_res, then x = sp_res(model, p, T)\nwhen f is loading, then x = loading(model, p, T)\n\nBy default, it performs a root-finding over the isotherm. but custom implementations can be done by overloading pressure_impl(model::MyModel,x,T,f::typeof(f))\n\n\n\n\n\n","category":"function"},{"location":"reference/#Langmuir.saturated_loading","page":"Reference","title":"Langmuir.saturated_loading","text":"saturated_loading(model::IsothermModel, T)\n\nReturns the loading of of an adsorption isotherm when the pressure tends to infinity. by default it is evaluated at 1/√eps(eltype(model)) (6.7108864e7 for Float64 inputs.).\n\nInputs\n\nmodel::IsothermModel: the isotherm model\nT: temperature.\n\n\n\n\n\n","category":"function"},{"location":"reference/#Langmuir.loading","page":"Reference","title":"Langmuir.loading","text":"loading(model::IsothermModel, p, T) -> q\n\nCalculate the loading q based on the provided isotherm model, pressure p, and temperature T.\n\nArguments\n\nmodel::IsothermModel: An instance of IsothermModel, representing the isotherm model to be used for the calculation.\np: The pressure at which the loading is to be calculated.\nT: The temperature at which the loading is to be calculated.\n\nReturns\n\nq: The calculated loading based on the isotherm model, pressure, and temperature.\n\nDescription\n\nThis function computes the loading q based on the given isotherm model, pressure p, and temperature T.\n\n\n\n\n\n","category":"function"},{"location":"reference/#Langmuir.henry_coefficient","page":"Reference","title":"Langmuir.henry_coefficient","text":"henry_coefficient(model::IsothermModel, T) -> H\n\nCalculate the Henry's coefficient for a single component system using the specified isotherm model and temperature T.\n\nArguments\n\nmodel::IsothermModel: An instance of IsothermModel, representing the isotherm model to be used for the calculation.\nT: The temperature at which the Henry's coefficient is to be calculated.\n\nReturns\n\nH: The Henry's coefficient in the default units of [mol/kg].\n\nDescription\n\nThis function returns the Henry's coefficient, which is a measure of the initial slope of the adsorption isotherm at low pressures. It is defined as the derivative of the loading q with respect to pressure p at p = 0:\n\nH = (∂q/∂p) at p = 0 at a given T.\n\n\n\n\n\n","category":"function"},{"location":"reference/#Langmuir.sp_res","page":"Reference","title":"Langmuir.sp_res","text":"sp_res(model::IsothermModel, p, T) -> Π\n\nCalculate the reduced spreading pressure for a given isotherm model at a specific pressure p and temperature T.\n\nArguments\n\nmodel::IsothermModel: An instance of IsothermModel, representing the isotherm model used for the calculation.\np: The pressure at which the reduced spreading pressure is to be calculated.\nT: The temperature at which the reduced spreading pressure is to be calculated.\n\nReturns\n\nΠ: The reduced spreading pressure\n\nDescription\n\nThe reduced spreading pressure is a key quantity in Ideal Adsorbed Solution Theory (IAST), used to describe the adsorption behavior of mixtures. This function calculates the reduced spreading pressure Π by integrating the isotherm equation over the pressure range from 0 to p.\n\nThe reduced spreading pressure is often calculated numerically as:\n\nΠ = ∫ (q(p') / p') dp' from 0 to p\n\nwhere:\n\nq(p') is the loading at pressure p'.\n\n\n\n\n\n","category":"function"},{"location":"#Langmuir.jl","page":"Home","title":"Langmuir.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Langmuir.jl is a Julia library designed to model adsorption equilibria for both single and multi-component systems.","category":"page"},{"location":"","page":"Home","title":"Home","text":"For single-component adsorption, the library offers a wide range of isotherms, from simple one-parameter models like Henry's law to more complex two- and three-parameter models such as the Langmuir (Single and MultiSite), Freundlich, Temkin, Redlich-Peterson, Toth, and Sips isotherms. These models include temperature-dependent parameters, which are essential for estimating the isosteric heat of adsorption from pressure-loading data sets at varying temperatures. For a complete list of available models, refer to the list of supported models supported_models.","category":"page"},{"location":"","page":"Home","title":"Home","text":"For multicomponent systems, Langmuir.jl employs the Ideal Adsorption Solution Theory (IAST) to predict the loading of different components, given their bulk pressure, temperature and individual isotherms. This approach allows for predictive modeling of multicomponent adsorption.","category":"page"},{"location":"","page":"Home","title":"Home","text":"A complete workflow for using Langmuir.jl typically includes the following steps:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Data Preparation: Load your dataset, which should include adsorption loading, pressure, temperature, and heat data.\nIsotherm Fitting: Fit the appropriate isotherm model to your data using a global optimization method to ensure accurate parameter estimation.\nMulticomponent Loading Estimation: Use Ideal Adsorption Solution Theory (IAST) to predict the loading of each component in a multicomponent system based on bulk pressure and temperature.\nIsosteric Heat Calculation: Estimate the isosteric heat of adsorption for single or multicomponent systems using the library's built-in functions, which account for temperature dependencies in the isotherm parameters.","category":"page"},{"location":"#Authors","page":"Home","title":"Authors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Andrés Riedemann, University of Concepción\nVinicius Santana, Norwegian University of Science and Technology - NTNU.\nPierre Walker - Caltech.","category":"page"},{"location":"tutorials/multicomponent/#best-isotherm","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"","category":"section"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"Working with single component models is an important part of adsorption modeling, and it is often difficult to choose the best model for a given system. ","category":"page"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"To illustrate the investigation of choosing the right isotherm using Langmuir.jl, this tutorial was prepared. The data was obtained from Möllmer et al. (2012) where isotherm data of methane adsorption on Cu(Me-4py-trz-ia) material is discussed. The data was extracted using an automated symbol extraction tool from the original publication and may containg some errors, specially at low pressures where reading is difficult as the markers overlap.","category":"page"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"The processing of the data consists of the following steps:","category":"page"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"Read the data: The data is read from CSV files, which contain pressure and loading values for each component at different temperatures.\nCreate isotherm data structures: The data is converted into IsothermData structures, which are used to store the pressure, loading, and temperature information.\nMerge isotherm data: The individual isotherm data for each temperature is merged into a single structure using the merge_isotherm_data function.\nPlot the isotherm data: The isotherm data can then be plotted to visualize the adsorption behavior of each component at different temperatures.","category":"page"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"using DelimitedFiles, Plots, Langmuir\nTemperatures = [273.0, 298.0, 323.0]\n\n#Data only has pressure and loading, so we need to create a temperature vector\nCH4_273 = readdlm(joinpath(@__DIR__, \"sample_data/ch4_273K.csv\"), ',')\nT⃗_237 = fill(273.0, size(CH4_273, 1))\n\nCH4_298 = readdlm(joinpath(@__DIR__, \"sample_data/ch4_298K.csv\"), ',')\nT⃗_298 = fill(298.0, size(CH4_298, 1))\n\nCH4_323 = readdlm(joinpath(@__DIR__, \"sample_data/ch4_323K.csv\"), ',')\nT⃗_323 = fill(323.0, size(CH4_323, 1))\n\n#Individual isotherm data for each temperature\nCH4_data_273 = isotherm_data(CH4_273[:, 1], CH4_273[:, 2], T⃗_237) # Pressure, Loading, Temperature\nCH4_data_298 = isotherm_data(CH4_298[:, 1], CH4_298[:, 2], T⃗_298)\nCH4_data_323 = isotherm_data(CH4_323[:, 1], CH4_323[:, 2], T⃗_323)\n\n# Merge the isotherm data into a single structure\nCH4_data = merge_isotherm_data(CH4_data_273, CH4_data_298, CH4_data_323)\n\nfig1 = Plots.plot()\nxlabel = \"Pressure (MPa)\"\nylabel = \"Loading (mol/kg)\"\nplot!(fig1, CH4_data, 273.0, label = \"CH4 at 273K\", markershape = :hexagon, xlabel = xlabel, ylabel = ylabel, m = (4, :white, stroke(1, :blue)), size = (800, 350), legend_columns=1)\nplot!(fig1, CH4_data, 298.0, label = \"CH4 at 298K\", markershape = :square, m = (4, :white, stroke(1, :green)))\nplot!(fig1, CH4_data, 323.0, label = \"CH4 at 323K\", markershape = :circle, m = (4, :white, stroke(1, :red)))","category":"page"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"note: Note\nObserve that the data set automatically includes a variance column, which refers to the variance in the loading measuraments and is set to 1.0 for all data points. This is a placeholder and can be replaced with actual variance values if available. If you are less certain about some measurements than others, you can set the variance to a higher value for those points, which will make the fitting algorithm less sensitive to them.","category":"page"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"The reference manuscript fitted a Toth model to CH4. Let's try a few models to see which one fits the data best. The Langmuir package provides a variety of isotherm models, including LangmuirS1, Toth, Sips and Thermodynamic Langmuir. ","category":"page"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"Fitting a Langmuir model is quite simple as the parameters are easy to initialize. We will use it as an initial guess for all models, but we want to compare first the Langmuir single-site model with the Thermodynamic Langmuir model, which is an implicit model that takes into consideration an activity coefficient.  ","category":"page"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"using Langmuir\nalg = DEIsothermFittingSolver(max_steps = 500, population_size = 100,\nlogspace = true, verbose = true)\nprob_lang = IsothermFittingProblem(LangmuirS1, CH4_data, abs2)\nloss_lang, model_lang = fit(prob_lang, alg)\nplot!(fig1, model_lang, 273.0, (0.0, maximum(CH4_data.p)), color = :blue)\nplot!(fig1, model_lang, 298.0, (0.0, maximum(CH4_data.p)), color = :green)\nplot!(fig1, model_lang, 323.0, (0.0, maximum(CH4_data.p)), color = :red)","category":"page"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"Now, we will compare similar models, i.e., the Toth and Sips models, which are both more complex than the Langmuir model. The Toth model is a more flexible model that can fit a wider range of isotherm shapes, while the Sips model is a combination of the Langmuir and Freundlich models.","category":"page"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"x0_tlang = [model_lang.M, model_lang.K₀, model_lang.E, -1e-10]\nlb_tlang = (1e-10, 1e-25, -70_000.0, -2000.0)\nub_tlang = (20.0, 1e-1, -1000.0, 0.0)\ncalorimetric_data = nothing # No calorimetric data available for this example\nprob_tlang = IsothermFittingProblem(ThermodynamicLangmuir, CH4_data, calorimetric_data, abs2, x0_tlang, lb_tlang, ub_tlang)\nalg = DEIsothermFittingSolver(max_steps = 1000, population_size = 500,\nlogspace = true, verbose = true, time_limit = 15)\nloss_tlang, model_tlang = fit(prob_tlang, alg)\nplot!(fig1, model_tlang, 273.0, (0.0, maximum(CH4_data.p)), color = :blue, linestyle = :dot)\nplot!(fig1, model_tlang, 298.0, (0.0, maximum(CH4_data.p)), color = :green, linestyle = :dot)\nplot!(fig1, model_tlang, 323.0, (0.0, maximum(CH4_data.p)), color = :red, linestyle = :dot)","category":"page"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"The Toth model is more trick to fit as the f parameter is made temperature dependent. The default bounds for the parameters are too large, so we need to set them manually. The fitted Langmuir above can be used as a good initial guess for the parameters.","category":"page"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"note: Note\nIt is important to set a time limit for the optimization algorithm to prevent it from running indefinitely in search of a better fit - from previous experience, you won't need more than 10s to fit an isotherm with a good initial guess. You can do this by setting the time_limit parameter in the DEIsothermFittingSolver constructor.","category":"page"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"fig2 = Plots.plot()\nxlabel = \"Pressure (MPa)\"\nylabel = \"Loading (mol/kg)\"\nplot!(fig2, CH4_data, 273.0, label = \"CH4 at 273K\", markershape = :hexagon, xlabel = xlabel, ylabel = ylabel, m = (4, :white, stroke(1, :blue)), size = (800, 350), legend_columns=1)\nplot!(fig2, CH4_data, 298.0, label = \"CH4 at 298K\", markershape = :square, m = (4, :white, stroke(1, :green)))\nplot!(fig2, CH4_data, 323.0, label = \"CH4 at 323K\", markershape = :circle, m = (4, :white, stroke(1, :red)))\n\n\nx0_toth = [model_lang.M, model_lang.K₀, model_lang.E, 1.0, -1e-10]\nlb_toth = (1e-10, 1e-25, -70_000.0, 0.0, -300.0)\nub_toth = (20.0, 1e-1, -1000.0, 2.0, 0.0)\ncalorimetric_data = nothing # No calorimetric data available for this example\nprob_toth = IsothermFittingProblem(Toth, CH4_data, calorimetric_data, abs2, x0_toth, lb_toth, ub_toth)\nalg = DEIsothermFittingSolver(max_steps = 500, population_size = 100,\nlogspace = true, verbose = true, time_limit = 15)\nloss_toth, model_toth = fit(prob_toth, alg)\nplot!(fig2, model_toth, 273.0, (0.0, maximum(CH4_data.p)), color = :blue, linestyle = :dash)\nplot!(fig2, model_toth, 298.0, (0.0, maximum(CH4_data.p)), color = :green, linestyle = :dash)\nplot!(fig2, model_toth, 323.0, (0.0, maximum(CH4_data.p)), color = :red, linestyle = :dash)","category":"page"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"A good reminder about our formulation of the Toth model is that the f parameter has a temperature dependency of f = f_0 - fracbetaT. The beta parameter is initially defined with bounds in (-infty infty) while f_0 is bounded to (0 infty). However, it is good practice to investigate the direction in which beta value changes with temperature. After empirical testing, it became evident that beta should be constrained to the interval (-infty 0) instead of including positive numbers and the bounds were updated accordingly. Nevertheless, the fitted model tends to push beta to the lower bound, effectively driving the f_0 term towards zero, i.e., the temperature dependency of f that leads to the lowest fitting error effectively becomes f = -fracbetaT. ","category":"page"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"This behavior reflects a common issue in isotherm models with a high number of parameters: parameter correlation leads to identifiability problems, where different parameter combinations can yield similar loss values. As a result, optimization may favor extreme values that are not physically meaningful. ","category":"page"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"x0_sips = [model_lang.M, model_lang.K₀, model_lang.E, 1.0, -1.0]\nlb_sips = (1e-10, 1e-25, -70_000.0, 0.0, -300.0)\nub_sips = (20.0, 1e-1, -1000.0, 2.0, 0.0)\nprob_sips = IsothermFittingProblem(Sips, CH4_data, calorimetric_data, abs2, x0_sips, lb_sips, ub_sips)\nalg = DEIsothermFittingSolver(max_steps = 500, population_size = 100,\nlogspace = true, verbose = true, time_limit = 15)\nloss_sips, model_sips = fit(prob_sips, alg)\nplot!(fig2, model_sips, 273.0, (0.0, maximum(CH4_data.p)), color = :blue, linestyle = :dashdot)\nplot!(fig2, model_sips, 298.0, (0.0, maximum(CH4_data.p)), color = :green, linestyle = :dashdot)\nplot!(fig2, model_sips, 323.0, (0.0, maximum(CH4_data.p)), color = :red, linestyle = :dashdot)","category":"page"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"You can build a table with the results of the fitting to compare the models. The parameters field of the IsothermModel structure contains the fitted parameters, and the loss variable contains the loss of the fitting, i.e., mathcalL = sum_i^N frac(q_i - q*_i)^2sigma^2_i. ","category":"page"},{"location":"tutorials/multicomponent/#Langmuir-models-(Single-Site-and-Thermodynamic)","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Langmuir models (Single Site and Thermodynamic)","text":"","category":"section"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"using DataFrames, Printf\nlangmuir_results = DataFrame(\n    Model = [\"Langmuir\", \"Thermodynamic Langmuir\"],\n    Loss = round.([loss_lang, loss_tlang], digits=4),\n    M = round.([model_lang.M, model_tlang.M], digits=3),\n    K₀ = [model_lang.K₀, model_tlang.K₀],\n    E = round.([model_lang.E, model_tlang.E], digits=1),\n    Bᵢᵩ = [0.0, round(model_tlang.Bᵢᵩ, sigdigits=3)]\n)","category":"page"},{"location":"tutorials/multicomponent/#Complex-models-table-(Toth-and-Sips)","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Complex models table (Toth and Sips)","text":"","category":"section"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"complex_results = DataFrame(\n    Model = [\"Toth\", \"Sips\"],\n    Loss = round.([loss_toth, loss_sips], digits=4),\n    M = round.([model_toth.M, model_sips.M], digits=3),\n    K₀ = [model_toth.K₀, model_sips.K₀],\n    E = round.([model_toth.E, model_sips.E], digits=1),\n    f₀ = [round(model_toth.f₀, digits=3), round(model_sips.f₀, digits=3)],\n    β = [round(model_toth.β, sigdigits=3), round(model_sips.β, sigdigits=3)]\n);","category":"page"},{"location":"tutorials/multicomponent/","page":"Finding the best isotherm for your data with Langmuir.jl","title":"Finding the best isotherm for your data with Langmuir.jl","text":"As can be seen, the Toth model achieves the lowest mean squared error. However, it can be seen that all measurements are assigned the same variance, which is not the case in reality. Low pressure measurements are more uncertain than high pressure ones, so we can assign a higher variance to the low pressure points and see the consequences in the fitting process. You can do this by modifying the σ² field of the IsothermData structure.","category":"page"}]
}
