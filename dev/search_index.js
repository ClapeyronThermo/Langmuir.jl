var documenterSearchIndex = {"docs":
[{"location":"tutorials/tutorial/#Tutorial","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"","category":"section"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"In this tutorial, we will go through a typical workflow for processing and analyzing adsorption equilibrium data:","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"Loading adsorption data for the pure components in the mixture of interest.\nFitting an isotherm for each component.\nAnalyzing the fitting quality by:\nPlotting predictions vs. experimental data.\nPerforming residual analysis.\nEstimating single-component properties such as the isosteric heat of adsorption.\nEstimating multicomponent adsorption loading using the Ideal Adsorbed Solution Theory (IAST).","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"For this tutorial, we will work with a binary system consisting of ethane and ethylene. The goal is to investigate their adsorption properties in DUT-8, a material known for being ethane-selective.","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"This case study is based on the research presented in the following paper:","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"Reference: Santana, V. V., Carmo, P., Seabra, R., Rodrigues, A. E., Ribeiro, A. M., Nogueira, I. B. R., Yoon, J. W., Cho, K. H., Yun, J. S., Lee, U.-H., Kim, K., Ferreira, A. F. P. (2024). Ethylene Purification by Pressure Swing Adsorption with the Paraffin Selective Metal–Organic Framework─DUT-8. Industrial & Engineering Chemistry Research, 63(5), 2307–2319. DOI: 10.1021/acs.iecr.3c02808.","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"Ethane and ethylene data are stored in  ethane_tpl_data.csv and ethylene_tpl.csv files. To read csv files, many options are available in Julia. Here, we will use DelimitedFiles.jl.","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"In the file, pressure unit is in bar, temperature in Kelvin and loading in mmol/g or mol/kg. ","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"Let's read and visualize the isotherms at the different temperatures.","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"using Plots, DelimitedFiles, Langmuir\nethane_data_path = joinpath(@__DIR__, \"sample_data/ethane_tpl_data.csv\")\nethylene_data_path = joinpath(@__DIR__, \"sample_data/ethylene_tpl_data.csv\")\nethane_data = readdlm(ethane_data_path, ',')\nP_ethane = ethane_data[:, 2]*1e5\nT_ethane = ethane_data[:, 1]\nl_ethane = ethane_data[:, 3]\nd_ethane = isotherm_data(P_ethane, l_ethane, T_ethane)\nTs_ethane, lp_ethane = split_data_by_temperature(d_ethane)\n\nethylene_data = readdlm(ethylene_data_path, ',')\nP_ethylene = ethylene_data[:, 2]*1e5\nT_ethylene = ethylene_data[:, 1]\nl_ethylene = ethylene_data[:, 3]\nd_ethylene = isotherm_data(P_ethylene, l_ethylene, T_ethylene)\nTs_ethylene, lp_ethylene = split_data_by_temperature(d_ethylene)\n\n\nscatter(lp_ethane[1][2], lp_ethane[1][1], label = \"T = 283.00 K (Ethane)\", \nxlabel = \"Pressure [Pa]\", ylabel = \"loading [mol/kg]\", m = (4, :white, stroke(1, :slateblue2)),framestyle=:box, markershape = :circle, size = (600, 300))\nscatter!(lp_ethane[3][2], lp_ethane[3][1], label = \"T = 323.00 K (Ethane)\", m = (4, :white, stroke(1, :lightslateblue)), markershape = :circle)\n\nscatter!(lp_ethylene[1][2], lp_ethylene[1][1], label = \"T = 283.00 K (Ethylene)\", color = :mediumspringgreen, markershape = :square, m = (3, :white, stroke(1, :springgreen2)))\nscatter!(lp_ethylene[3][2], lp_ethylene[3][1], label = \"T = 323.00 K (Ethylene)\",\nmarkershape = :square, m = (3, :white, stroke(1, :springgreen2)))","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"Following the reference manuscript, the quadratic isotherm is the chosen model for fitting the data. In this tutorial, the same strategy is used.","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"import Langmuir: x0_guess_fit, to_vec\n#Fitting ethane\nx0_ethane = to_vec(x0_guess_fit(Quadratic, d_ethane))\nlb_ethane = (1e-25, 1e-25, 1e-4, -80_000.0, -80_000.0)\nub_ethane = (1e-1, 1e-1, 100., -1_000.0, -1_000.0)\n\nprob_ethane = IsothermFittingProblem(Quadratic{eltype(d_ethane)}, d_ethane, nothing, abs2, x0_ethane, lb_ethane, ub_ethane) #Bounds have to be manually tweaked. Default interval is too large\nalg = DEIsothermFittingSolver(max_steps = 5000, population_size = 50,\nlogspace = true, verbose = true)\nloss_fit_ethane, ethane_isotherm = fit(prob_ethane, alg)\nprintln(\"Fitting loss for ethane is $loss_fit_ethane\")\nprintln(ethane_isotherm)","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"#Plotting ethane fitting\nloading1_ethane = loading_at_T(ethane_isotherm, lp_ethane[1][2], Ts_ethane[1])\nloading3_ethane = loading_at_T(ethane_isotherm, lp_ethane[3][2], Ts_ethane[3])\nplot!(sort(lp_ethane[1][2]), sort(loading1_ethane), color = :slateblue2, label = \"Quadratic - 283.0 K\")\nplot!(sort(lp_ethane[2][2]), sort(loading3_ethane), color = :slateblue2, label = \"Quadratic - 323.0 K\")","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"#Fitting Ethylene\nx0_ethylene = to_vec(x0_guess_fit(Quadratic, d_ethylene))\nlb_ethylene = (1e-25, 1e-25, 1e-4, -80_000.0, -80_000.0)\nub_ethylene = (1e-1, 1e-1, 100., -500.0, -500.0)\nprob_ethylene = IsothermFittingProblem(Quadratic{eltype(d_ethylene)}, d_ethylene, nothing, abs2, x0_ethylene, lb_ethylene, ub_ethylene)\nloss_fit_ethylene, ethylene_isotherm = fit(prob_ethylene, alg)\nprintln(\"Fitting loss for ethane is $loss_fit_ethylene\")\nprintln(ethylene_isotherm)","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"#Plotting ethylene isotherms\nloading1_ethylene = loading_at_T(ethylene_isotherm, lp_ethylene[1][2], Ts_ethylene[1])\nloading3_ethylene = loading_at_T(ethylene_isotherm, lp_ethylene[1][2], Ts_ethylene[3])\nplot!(sort(lp_ethylene[1][2]), sort(loading1_ethylene), color = :springgreen2, label = \"Quadratic - 283.0 K\")\nplot!(sort(lp_ethylene[1][2]), sort(loading3_ethylene), color = :springgreen2, label = \"Quadratic - 323.0 K\")","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"From the fitting results, the isotherm parameters closely match those reported in the reference manuscript. For example, the parameter M was estimated at 3.68 in the manuscript, while it is 3.64 in this analysis. However, the energy parameters exhibit a greater discrepancy. Without calorimetric data, it's challenging to determine the accuracy of these values, as parameter identifiability is limited when relying solely on loading data.","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"#Ethane isosteric heat\nP_C₂_283K = sort(lp_ethane[1][2][2:end])\nl_C₂_283K = sort(loading1_ethane[2:end])\nΔH_C₂_283K = map(p -> isosteric_heat(ethane_isotherm, p, 283.0), P_C₂_283K)\n\n#Ethylene isosteric heat\nP_C₂₌_283K = sort(lp_ethylene[1][2][2:end])\nl_C₂₌_283K = sort(loading1_ethylene[2:end])\nΔH_C₂₌_283K = map(p -> isosteric_heat(ethylene_isotherm, p, 283.0), P_C₂₌_283K)\n\nscatter(l_C₂_283K, ΔH_C₂_283K, xlabel = \"Loading (mol/kg)\", ylabel = \"Isosteric Heat (J/mol)\", m = (4, :white, stroke(1, :lightslateblue)), markershape = :circle, label = \"Ethane - 283.0 K\", size = (600, 300))\nscatter!(l_C₂₌_283K, ΔH_C₂₌_283K, xlabel = \"Loading (mol/kg)\", ylabel = \"Isosteric Heat (J/mol)\", markershape = :square, m = (3, :white, stroke(1, :springgreen2)), label = \"Ethylene - 283.0 K\")","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"The plot shows the isosteric heat of adsorption for ethane and ethylene at 283.0 K as a function of loading. Ethane exhibits a steeper decline in adsorption heat, suggesting stronger initial interactions that weaken significantly as loading increases, whereas ethylene's decline is more gradual, indicating a slower reduction in adsorption strength. ","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"Lastly, the final analysis will utilize IAST to make predictions on the binary adsorption of ethane and ethylene.","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"y_C₂ = range(0.0, 1.00, 51) |> collect\nsuccess_y_C₂ = []\nx_C₂ = []\nx_C₂₌ = []\np = 1*101325.0\nT = 303.0\nfor y_C₂_ᵢ in y_C₂\n   y = [y_C₂_ᵢ, (1.0 - y_C₂_ᵢ)]\n   models = [ethane_isotherm, ethylene_isotherm]\n   (n_total, x, is_success) = iast(models, p, T, y, IASTNestedLoop(), maxiters = 1500, abstol = 1e-10, reltol = 1e-10)\n\n   if is_success == :success\n      println(is_success)\n\n      push!(x_C₂, x[1])\n      push!(x_C₂₌, x[2])\n      push!(success_y_C₂, y_C₂_ᵢ)\n\n      else\n\n      nothing\n\n   end\nend\n\nplot(success_y_C₂, x_C₂, xlabel = \"x\", ylabel = \"y\", label = \"ethane\", framestyle=:box, size = (600, 300))\nplot!(1.0 .- success_y_C₂, x_C₂₌, label = \"ethylene\")","category":"page"},{"location":"tutorials/tutorial/","page":"A typical workflow with Langmuir.jl","title":"A typical workflow with Langmuir.jl","text":"Here you can see the x-y plot for both components.  ","category":"page"},{"location":"models/models/","page":"Supported models","title":"Supported models","text":"CurrentModule = Langmuir","category":"page"},{"location":"models/models/#supported_models","page":"Supported models","title":"Supported Isotherms","text":"","category":"section"},{"location":"models/models/","page":"Supported models","title":"Supported models","text":"Here you can find the list of supported isotherm models.","category":"page"},{"location":"models/models/","page":"Supported models","title":"Supported models","text":"Pages = [\"models.md\"]","category":"page"},{"location":"models/models/","page":"Supported models","title":"Supported models","text":"Pages = [\"models.md\"]","category":"page"},{"location":"models/models/#No-parameter-Isotherm-Models","page":"Supported models","title":"No-parameter Isotherm Models","text":"","category":"section"},{"location":"models/models/","page":"Supported models","title":"Supported models","text":"Langmuir.ZeroIsotherm","category":"page"},{"location":"models/models/#Langmuir.ZeroIsotherm","page":"Supported models","title":"Langmuir.ZeroIsotherm","text":"`ZeroIsotherm()`\n\nZeroIsotherm <: IsothermModel\n\nZeroIsotherm represents an isotherm that has no adsorption. it can be used to define carrier gases.\n\nDescription\n\nA zero isotherm is defined by:\n\nn = 0\n\nwhere:\n\nn is the loading of the adsorbate on the adsorbent\n\n\n\n\n\n","category":"type"},{"location":"models/models/#One-parameter-Isotherm-Models","page":"Supported models","title":"One-parameter Isotherm Models","text":"","category":"section"},{"location":"models/models/","page":"Supported models","title":"Supported models","text":"Langmuir.Henry","category":"page"},{"location":"models/models/#Langmuir.Henry","page":"Supported models","title":"Langmuir.Henry","text":"`Henry(Kh, E)`\n\nHenry <: IsothermModel\n\nInputs\n\nKh::T: Affinity parameter, or Henry’s constant at T → ∞ [mol/kg/Pa]\nE::T: Adsorption energy, [J/mol]\n\nDescription\n\nThe Henry isotherm model describes the adsorption of gases on solid surfaces at low pressures, where the amount of adsorbate adsorbed is directly proportional to the pressure of the gas. This model is typically valid in the low-pressure limit of adsorption, where the adsorption sites are far from saturation and the interactions between adsorbed molecules are negligible.\n\nThe adsorption behavior follows Henry's law:\n\nn = K * p\n\nThe energy parameter E is related to Henry's constant Kh by the equation:\n\nK = Kh*exp(-E / (R * T))\n\nWhere:\n\nR is the universal gas constant, [J/mol/K],\nT is the temperature, [K].\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Two-parameter-Isotherm-Models","page":"Supported models","title":"Two-parameter Isotherm Models","text":"","category":"section"},{"location":"models/models/","page":"Supported models","title":"Supported models","text":"Langmuir.LangmuirS1\nLangmuir.Freundlich","category":"page"},{"location":"models/models/#Langmuir.LangmuirS1","page":"Supported models","title":"Langmuir.LangmuirS1","text":"`LangmuirS1(M, K₀, E)`\n\nLangmuirS1 <: IsothermModel\n\nLangmuirS1(M, K₀, E) represents the single site Langmuir isotherm model.\n\nInputs\n\nM::T: Saturation loading, [mol/kg]\nK₀::T: Affinity parameter at T → ∞, [1/Pa]\nE::T: Adsorption energy, [J/mol]\n\nDescription\n\nThe LangmuirS1 equation is given by:\n\nn = (M * K * p) / (1 + K * p)\n\nThe adsorption energy E is related to the equilibrium constant K₀ by the equation:\n\nK = K₀*exp(-E / (R * T))\n\nwhere:\n\nR is the gas constant,\nT is the temperature.\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Langmuir.Freundlich","page":"Supported models","title":"Langmuir.Freundlich","text":"`Freundlich(K₀, f₀, β, E)`\n\n Freundlich <: IsothermModel\n\nInputs\n\nK₀::T: Affinity parameter at T → ∞, [1/Pa]\nf₀::T: Surface heterogeneity parameter at T → ∞, [-]\nβ::T: Surface heterogeneity coefficient [K]\nE::T: Adsorption energy, [J/mol]\n\nDescription\n\nThe Freundlich isotherm is given by:\n\nn = K_f × pᶠ\n\nThe affinity parameter K_f is a temperature dependent and can be linked to adsorption energy E by:\n\nK_f = K₀ × exp(-E / (RT))\n\nThe exponent f is also temperature dependent and can be expressed as: \n\nf = f₀ - β/T\n\nWhere:\n\nR is the gas constant,\nT is the temperature.\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Three-parameter-Isotherm-Models","page":"Supported models","title":"Three-parameter Isotherm Models","text":"","category":"section"},{"location":"models/models/","page":"Supported models","title":"Supported models","text":"Langmuir.RedlichPeterson\nLangmuir.Toth\nLangmuir.Sips\nLangmuir.LangmuirFreundlich\nLangmuir.Unilan\nLangmuir.Quadratic\nLangmuir.BrunauerEmmettTeller","category":"page"},{"location":"models/models/#Langmuir.RedlichPeterson","page":"Supported models","title":"Langmuir.RedlichPeterson","text":"`RedlichPeterson(M, K₀, E, f₀, β)`\n\nRedlichPeterson <: IsothermModel\n\nInputs\n\nM::T: Saturation loading, [mol/kg]\nK₀::T: Affinity parameter at T → ∞, [Pa]¹/ᶠ\nE::T: Adsorption energy, [J/mol]\nf₀::T: Surface heterogeneity parameter at T → ∞, [-]\nβ::T: Surface heterogeneity coefficient, [K]\n\nDescription\n\nThe RedlichPeterson equation is given by:\n\nn = M * p / (1 + K₀ * p^f)\n\nThe adsorption energy E is related to the equilibrium constant K₀ by the equation:\n\nK = K₀ × exp(-E / (R * T))\n\nThe exponent f is also temperature dependent and can be expressed as: \n\nf = f₀ - β/T\n\nwhere:\n\nR is the gas constant,\nT is the temperature.\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Langmuir.Toth","page":"Supported models","title":"Langmuir.Toth","text":"`Toth(M, K₀, E, f₀, β)`\n\nToth <: IsothermModel\n\nInputs\n\nM::T: Saturation loading, [mol/kg]\nK₀::T: Affinity parameter at T → ∞, [Pa⁻¹]\nE::T: Adsorption energy, [J/mol]\nf₀::T: Surface heterogeneity parameter at T → ∞, [-]\nβ::T: Surface heterogeneity coefficient, [K]\n\nDescription\n\nToth isotherm model: \n\nn = MKP/(1 + (K*P)ᶠ)¹/ᶠ\n\nThe adsorption energy E is related to the equilibrium constant K₀ by the equation:\n\nK = K₀ × exp(-E / (R * T))\n\nThe exponent f is also temperature dependent and can be expressed as: \n\nf = f₀ - β/T\n\nwhere:\n\nR is the gas constant,\nT is the temperature.\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Langmuir.Sips","page":"Supported models","title":"Langmuir.Sips","text":"`Sips(M, K₀, E, f₀, β)`\n\nSips <: IsothermModel\n\nInputs\n\nM::T: Saturation loading, [mol/kg]\nK₀::T: Affinity parameter at T → ∞, [Pa⁻¹]\nE::T: Adsorption energy, [J/mol]\nf₀::T: Surface heterogeneity parameter at T → ∞, [-]\nβ::T: Surface heterogeneity coefficient, [K]\n\nDescription\n\nThe Sips equation is given by:\n\nn = M * (K * p)ᶠ / (1 + (K * p)ᶠ)\n\nThe adsorption energy E is related to the equilibrium constant K₀ by the equation:\n\nK = K₀ × exp(-E / (R * T))\n\nThe exponent f is also temperature dependent and can be expressed as: \n\nf = f₀ - β/T\n\nwhere:\n\nR is the gas constant,\nT is the temperature.\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Langmuir.LangmuirFreundlich","page":"Supported models","title":"Langmuir.LangmuirFreundlich","text":"`LangmuirFreundlich(M, K₀, E, f₀, β)`\n\nLangmuirFreundlich <: IsothermModel\n\nInputs\n\nM::T: Saturation loading, [mol/kg]\nK₀::T: Affinity parameter at T → ∞, [1/Pa]\nE::T: Adsorption energy, [J/mol]\nf₀::T: Surface heterogeneity parameter at T → ∞, [-]\nβ::T: Surface heterogeneity coefficient, [K]\n\nDescription\n\nThe Langmuir-Freundlich form of the isotherm is:\n\nn = M × K × pᶠ /(1 + K × pᶠ)\n\nWhere:\n\nn is the loading of the adsorbate on the adsorbent,\n\nTemperature dependence:\n\nThe affinity parameter K is temperature-dependent and can be expressed as:\n\nK = K₀ × exp(-E / (RT))\n\nThe surface heterogeneity parameter f is also temperature-dependent and can be expressed as:\n\nf = f₀ - β / T\n\nWhere:\n\nR is the gas constant,\nT is the absolute temperature.\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Langmuir.Unilan","page":"Supported models","title":"Langmuir.Unilan","text":"`Unilan(M, K₀, E, f₀, β)`\n\nUnilan <: IsothermModel\n\nInputs\n\nM::T: Saturation loading, [mol/kg]\nK₀::T: Affinity parameter at T → ∞, [Pa⁻⁻¹]`\nE::T: Adsorption energy, [J/mol]\nf₀::T: Surface heterogeneity parameter at T → ∞, [-]\nβ::T: Surface heterogeneity coefficient, [K]\n\nDescription\n\nThe UNILAN equation is given by:\n\nn = M * log((1 + K* exp(f) * p)/(1 + K * exp(-f) * p)) / (2 * f)\n\nThe adsorption energy E is related to the equilibrium constant K₀ by the equation:\n\nK = K₀ × exp(-E / (R * T))\n\nThe surface heterogeneity parameter f is also temperature-dependent and can be expressed as:\n\nf = f₀ - β / T\n\nwhere:\n\nR is the gas constant,\nT is the temperature.\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Langmuir.Quadratic","page":"Supported models","title":"Langmuir.Quadratic","text":"`Quadratic(K₀a, K₀b, M, Ea, Eb)`\n\nQuadratic <: IsothermModel\n\nInputs\n\nK₀a::T: Affinity parameter A at T → ∞, [1/Pa]\nK₀b::T: Affinity parameter B at T → ∞, [1/Pa^2]\nM::T: Saturation loading, [mol/kg]\nEa::T: Adsorption energy A, [J/mol]\nEb::T: Adsorption energy B, [J/mol]\n\nDescription\n\nThe Quadratic isotherm model is given by:\n\nn = M × (Ka + 2Kb × p) × p / (1 + p × (Ka + Kb × p))\n\nThe model assumes that the affinity parameters Ka and Kb are temperature-dependent and follow the relation:\n\nKa = K₀a * exp(-Ea / (RT))\n\nKb = K₀b * exp(-Eb / (RT))\n\nWhere:\n\nKa and Kb are the affinity parameters at temperature T,\nR is the gas constant,\nT is the absolute temperature.\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Langmuir.BrunauerEmmettTeller","page":"Supported models","title":"Langmuir.BrunauerEmmettTeller","text":"`BrunauerEmmettTeller(K₀a, K₀b, M, E)`\n\nBrunauerEmmettTeller <: IsothermModel\n\nThe Brunauer-Emmett-Teller (BET) isotherm model describes multilayer adsorption on a homogeneous surface. It is widely used to characterize adsorption behavior in mesoporous materials.\n\nInputs\n\nK₀a::T: Affinity parameter A at T → ∞, [1/Pa]\nK₀b::T: Affinity parameter A at T → ∞, [1/Pa]\nM::T: Saturation loading, [mol/kg]\nE::T: Adsorption energy, [J/mol]\n\nDescription\n\nThe BET equation is given by:\n\nn = M × K₀a × p / (1 - K₀b × p) × (1 + (K₀a - K₀b) × p)\n\nTemperature dependence:\n\nThe affinity parameters K₀a and K₀b depend on temperature and are given by the following expressions:\n\nK₀a = K₀a × exp(-E / (RT))\n\nK₀b = K₀b × exp(-E / (RT))\n\nWhere:\n\nR is the gas constant,\nT is the absolute temperature.\n\n\n\n\n\n","category":"type"},{"location":"models/models/#Four-and-more-parameters-Isotherm-Models","page":"Supported models","title":"Four and more parameters Isotherm Models","text":"","category":"section"},{"location":"models/models/","page":"Supported models","title":"Supported models","text":"Langmuir.MultiSite","category":"page"},{"location":"models/models/#Langmuir.MultiSite","page":"Supported models","title":"Langmuir.MultiSite","text":"MultiSite(isotherms::Vararg{IsothermModel}...)\n\ngiven a list of isotherms, create a multisite isotherm model.\n\nmodel1 = LangmuirS1(3.0,1.0,0.0)\nmodel2 = LangmuirS1(3.0,0.9,3000.0)\ndouble_site_LangmuirS1 = MultiSite(model1,model2) #create a multisite model with two LangmuirS1 isotherms\n\n\n\n\n\n","category":"type"},{"location":"tutorials/background/#Models-in-adsorption-equilibrium","page":"Background","title":"Models in adsorption equilibrium","text":"","category":"section"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"Adsorption is a surface phenomenon where atoms, ions, or molecules from a gas, liquid, or dissolved solid adhere to the surface of another material. This process leads to the formation of a thin film of the adsorbed substance, known as the adsorbate, on the surface of the material it adheres to, called the adsorbent.","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"In thermodynamics, adsorption models play a similar role to equations of state in fluid systems, describing the equilibrium properties of adsorption processes. These models are crucial for understanding and predicting the thermodynamics of adsorption in both single and multicomponent systems.","category":"page"},{"location":"tutorials/background/#Single-component-adsorption","page":"Background","title":"Single-component adsorption","text":"","category":"section"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"Over the last decade, three fundamental approaches have led to the development of a wide range of adsorption isotherm models, including well-known ones such as Langmuir, Freundlich, Dubinin-Radushkevich, Temkin, Toth, and many others.","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"The first approach focuses on kinetics, where adsorption and desorption rates are equal, establishing adsorption equilibrium as a dynamic process. The second approach is rooted in thermodynamics, offering a basis for deriving various forms of adsorption isotherm models. The third approach emphasizes the generation of characteristic curves to describe adsorption behavior.","category":"page"},{"location":"tutorials/background/#Isosteric-heat-of-adsorption","page":"Background","title":"Isosteric heat of adsorption","text":"","category":"section"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"The heat of adsorption is a critical design parameter in adsorptive gas separation units. During adsorption, heat is released as adsorbate molecules transition to a lower energy state on the surface of the adsorbent compared to their higher energy state in the bulk gas phase. This exothermic process significantly impacts both the efficiency and operational conditions of adsorption systems. For a single component, the isosteric heat is given by:","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"Q_st = T*(V_g - V_a)*left( fracdP_idT right)rvert_(N_iA)","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"where Q_st is the isosteric heat of the component being adsorbed, T is the temperature, V_g is the molar volume of the component in gas phase, V_a is the molar volume of the component in adsorbed phase, N_i is the amount of component adsorbed of the component","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"When the isotherm is of the form N_i = f(T P_i), one can write:","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"Q_st i = T cdot (V_g - V_a) cdot left( fracpartial N_i  partial T mid P_ipartial N_i  partial P mid T right)","category":"page"},{"location":"tutorials/background/#Multi-component-adsorption","page":"Background","title":"Multi component adsorption","text":"","category":"section"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"The basic equations of the IAST are the analogue of Raoult's law in vapour–liquid equilibrium:","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"Py_i = P_i^0(pi)x_i","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"where","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"pi = pi_i = int_0^P_i^0 fracN_i^0(P)PdP","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"for i = 1N_c ","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"sum_i^N_c x_i = 1","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"Combining the two above equations, the following nonlinear solve is set:","category":"page"},{"location":"tutorials/background/","page":"Background","title":"Background","text":"f(pi) = 1-sum_1^N_cfracPy_iP_i^0left(piright) = 0","category":"page"},{"location":"tutorials/getting_started/#getting_started","page":"Getting Started","title":"Getting Started with Langmuir.jl","text":"","category":"section"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"This is an introductory tutorial for Langmuir.jl. We will demonstrate the basics of the package by building an isotherm model and estimating properties with it.","category":"page"},{"location":"tutorials/getting_started/#Installing-Langmuir.jl","page":"Getting Started","title":"Installing Langmuir.jl","text":"","category":"section"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"To install Langmuir, use the Julia package manager.","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Pkg; Pkg.add(\"Langmuir\")","category":"page"},{"location":"tutorials/getting_started/#Initializing-an-IsothermModel-and-estimating-properties-for-single-component-adsorption","page":"Getting Started","title":"Initializing an IsothermModel and estimating properties for single component adsorption","text":"","category":"section"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"In this package, we support several isotherm models. You can refer to the list of supported models here. Here is how you construct a LangmuirS1 model.","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Langmuir #hide\nM = 1.913 # mol.kg⁻¹\nK₀ = 6.82e-10 # Pa⁻¹\nE  = -21_976.40 # J.mol⁻¹\nisotherm = LangmuirS1(M, K₀, E)","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"You can use a instantiated model to estimate the equilibrium properties of the adsorption system. To estimate the loading (amount of adsorbate per mass of adsorbent) in the adsorbent, given the temperature T and pressure p, you can do as follows:","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"p = 101325.0\nT = 298.15\nl = loading(isotherm, p, T)","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"When estimating loading with a model, it is common to plot isotherms, i.e., pressure vs loading for a fixed temperature. To do it, you can use the loading_at_T(isotherm, P, T) function.","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Plots #hide\nP = 0.0:5_000.0:100_000.0 |> collect\nl_at_300 = loading_at_T(isotherm, P, 300.)\nl_at_350 = loading_at_T(isotherm, P, 350.)\nplot(P, l_at_300, size = (500, 250), label = \"300K\")\nplot!(P, l_at_350, label = \"350K\")\nxlabel!(\"P (Pa)\")\nylabel!(\"l (mol/kg)\")","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"You can also estimate other properties from the isotherm such as the henry coefficient at a given temperature by calling henry_coefficient(model::IsothermModel, T). The henry coefficient should correspond to the slope of the isotherm when P rightarrow 00. In Langmuir.jl, this is obtained using automatic differentiation and introduces no numerical error in the estimate. You can see in the example below how to visualize the tangent line built from the henry coefficient at 300K.","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"P_ = P[1:3]\nplot(P_, l_at_300[1:3], size = (500, 250), label = \"300K\") \nH = henry_coefficient(isotherm, 300.0)\nplot!(P_, H*P_, label = \"Tangent line\")","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"To finish this section for single component adsorption, one can also estimate the isosteric heat of adsorption by calling isosteric_heat(model, Vg, p, T) where Vg is the molar volume of the gas phase, p the pressure in Pascal and T the temperature in Kelvin. For the Langmuir model, the isosteric heat should be constant and equal to the energy parameter E. You can plot the isosteric heat either as a function of the pressure or loading.","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"Below it is assumed that the ideal gas law is a good approximation to describe the molar volume of the gas phase.","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"import Langmuir: Rgas\nΔH = map(P -> isosteric_heat(isotherm, P, 300.), P[2:end]) |> x -> round.(x, digits = 7)\nscatter(l_at_300[2:end], ΔH, size = (500, 250),  ylabel = \"Isosteric heat (J/mol)\", xlabel = \"loading (mol/kg)\", label = \"Estimated isosteric heat with AD\")\nplot!([first(l_at_300), last(l_at_300)], [E, E], label = \"Expected value\") ","category":"page"},{"location":"tutorials/getting_started/#Estimating-properties-in-multicomponent-adsorption.","page":"Getting Started","title":"Estimating properties in multicomponent adsorption.","text":"","category":"section"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"When it comes to estimating properties in multicomponent adsorption, the Ideal Adsorption Solution Theory (IAST) has been proven accurate for a number of systems. It allows one to estimate multicomponent adsorption behavior from single component isotherms.","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"When formulated, estimating the loading with IAST becomes a nonlinear solve problem which can be solved in different ways. Here, we support the Nested Loop and FastIAS methods. To know more about the two and which one to choose, refer to this paper: 10.1002/aic.14684.","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"It can be shown analytically that IAST estimation of multicomponent loading is the same as the extendend Langmuir method when the parameter M_i (saturation loading) are the same for all components, i.e., M_1 = M_2 =  = M_N_c. The extended langmuir has the form n_i = fracM_i times K_i0 expfracDelta HRT1 + sum_i K_i times P_i. Below you can see a numerical verification of IAST for that condition.","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Langmuir\nimport Langmuir: Rgas\nisotherm_1 = LangmuirS1(1.913, 6.82e-10, -21_976.40)\nisotherm_2 = LangmuirS1(1.913, 1.801e-9, -16_925.01)\nmodels = (isotherm_1, isotherm_2)\n(n_total, x, is_success) = iast(models, 101325.0, 300., [0.5, 0.5], FastIAS())\nloading_1 =  n_total*x[1]\nloading_2 = n_total*x[2]\n\nK_1 = 6.82e-10*exp(21_976.40/Rgas(isotherm_1)/300.)\nK_2 = 1.801e-9*exp(16_925.01/Rgas(isotherm_2)/300.)\np_1 = 0.5*101325.0\np_2 = 0.5*101325.0\nloading_1_expected = 1.913*K_1*p_1/(1.0 + K_1*p_1 + K_2*p_2)\nloading_2_expected = 1.913*K_2*p_2/(1.0 + K_1*p_1 + K_2*p_2)\n\nprintln(\"IAST estimated loading for component 1 is: \", round(loading_1, digits = 4))\nprintln(\"Extende langmuir estimated loading for component 1 is: \", round(loading_1_expected, digits = 4))","category":"page"},{"location":"reference/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"CurrentModule = Langmuir","category":"page"},{"location":"reference/#Contents","page":"Reference","title":"Contents","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/#Index","page":"Reference","title":"Index","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Langmuir.isosteric_heat\nLangmuir.pressure\nLangmuir.saturated_loading\nLangmuir.loading\nLangmuir.henry_coefficient\nLangmuir.sp_res","category":"page"},{"location":"reference/#Langmuir.isosteric_heat","page":"Reference","title":"Langmuir.isosteric_heat","text":"isosteric_heat(model::IsothermModel, Vᵍ, p, T; Vᵃ = zero(eltype(model))) -> Qₛₜ\n\nCalculate the isosteric heat of adsorption for a given isotherm model.\n\nArguments\n\nmodel::IsothermModel: The isotherm model used to describe the adsorption process.\nVᵍ: The molar volume of the gas phase.\nVᵃ: The molar volume of the adsorbed phase (typically Vᵃ << Vᵍ; default is zero).\np: Pressure at which the isosteric heat is evaluated.\nT: Temperature at which the isosteric heat is evaluated.\n\nReturns\n\nQₛₜ: The estimated isosteric heat of adsorption.\n\nDescription\n\nThe function estimates the isosteric heat of adsorption Qₛₜ for a single component using its isotherm and the Clausius-Clapeyron equation:\n\nQₛₜ = -T * (Vᵍ - Vᵃ) * (∂n/∂T)ₚ / (∂n/∂p)ₜ\n\nwhere:\n\nn is the loading,\nVᵍ is the molar volume of the gas phase,\nVᵃ is the molar volume of the adsorbed phase,\nT is the temperature,\np is the pressure.\n\nThis equation is derived based on the Clausius-Clapeyron relation, which relates the temperature dependence of the loading to the isosteric heat.\n\nReferences:\n\nPan, H., Ritter, J. A., & Balbuena, P. B. (1998). Examination of the approximations used in determining the isosteric heat of adsorption from the Clausius−Clapeyron equation. Langmuir: The ACS Journal of Surfaces and Colloids, 14(21), 6323–6327. doi:10.1021/la9803373\n\n\n\n\n\n","category":"function"},{"location":"reference/#Langmuir.pressure","page":"Reference","title":"Langmuir.pressure","text":"pressure(model::IsothermModel, x, T, f; approx = :exact)\n\ngiven an isotherm::IsothermModel and x = f(model,p,T), find p such that f(model,p,T) = x. There are two options for f and x:\n\nwhen f is sp_res, then x = sp_res(model, p, T)\nwhen f is loading, then x = loading(model, p, T)\n\nBy default, it performs a root-finding over the isotherm. but custom implementations can be done by overloading pressure_impl(model::MyModel,x,T,f::typeof(f),approx) The approx::Symbol argument indicates if the procedure is exact or approximate. by default a henry coefficient aproximation is used when approx =:henry is used.\n\n\n\n\n\n","category":"function"},{"location":"reference/#Langmuir.saturated_loading","page":"Reference","title":"Langmuir.saturated_loading","text":"saturated_loading(model::IsothermModel, T)\n\nReturns the loading of of an adsorption isotherm when the pressure tends to infinity. by default it is evaluated at 1/√eps(eltype(model)) (6.7108864e7 for Float64 inputs.).\n\nInputs\n\nmodel::IsothermModel: the isotherm model\nT: temperature.\n\n\n\n\n\n","category":"function"},{"location":"reference/#Langmuir.loading","page":"Reference","title":"Langmuir.loading","text":"loading(model::IsothermModel, p, T) -> q\n\nCalculate the loading q based on the provided isotherm model, pressure p, and temperature T.\n\nArguments\n\nmodel::IsothermModel: An instance of IsothermModel, representing the isotherm model to be used for the calculation.\np: The pressure at which the loading is to be calculated.\nT: The temperature at which the loading is to be calculated.\n\nReturns\n\nq: The calculated loading based on the isotherm model, pressure, and temperature.\n\nDescription\n\nThis function computes the loading q based on the given isotherm model, pressure p, and temperature T.\n\n\n\n\n\n","category":"function"},{"location":"reference/#Langmuir.henry_coefficient","page":"Reference","title":"Langmuir.henry_coefficient","text":"henry_coefficient(model::IsothermModel, T) -> H\n\nCalculate the Henry's coefficient for a single component system using the specified isotherm model and temperature T.\n\nArguments\n\nmodel::IsothermModel: An instance of IsothermModel, representing the isotherm model to be used for the calculation.\nT: The temperature at which the Henry's coefficient is to be calculated.\n\nReturns\n\nH: The Henry's coefficient in the default units of [mol/kg].\n\nDescription\n\nThis function returns the Henry's coefficient, which is a measure of the initial slope of the adsorption isotherm at low pressures. It is defined as the derivative of the loading q with respect to pressure p at p = 0:\n\nH = (∂q/∂p) at p = 0 at a given T.\n\n\n\n\n\n","category":"function"},{"location":"reference/#Langmuir.sp_res","page":"Reference","title":"Langmuir.sp_res","text":"sp_res(model::IsothermModel, p, T) -> Π\n\nCalculate the reduced spreading pressure for a given isotherm model at a specific pressure p and temperature T.\n\nArguments\n\nmodel::IsothermModel: An instance of IsothermModel, representing the isotherm model used for the calculation.\np: The pressure at which the reduced spreading pressure is to be calculated.\nT: The temperature at which the reduced spreading pressure is to be calculated.\n\nReturns\n\nΠ: The reduced spreading pressure \n\nDescription\n\nThe reduced spreading pressure is a key quantity in Ideal Adsorbed Solution Theory (IAST), used to describe the adsorption behavior of mixtures. This function calculates the reduced spreading pressure Π by integrating the isotherm equation over the pressure range from 0 to p.\n\nThe reduced spreading pressure is often calculated numerically as:\n\nΠ = ∫ (q(p') / p') dp' from 0 to p\n\nwhere:\n\nq(p') is the loading at pressure p'.\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Langmuir","category":"page"},{"location":"#Langmuir.jl","page":"Home","title":"Langmuir.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Langmuir.jl is a Julia library designed to model adsorption equilibria for both single and multi-component systems.","category":"page"},{"location":"","page":"Home","title":"Home","text":"For single-component adsorption, the library offers a wide range of isotherms, from simple one-parameter models like Henry's law to more complex two- and three-parameter models such as the Langmuir (Single and MultiSite), Freundlich, Temkin, Redlich-Peterson, Toth, and Sips isotherms. These models include temperature-dependent parameters, which are essential for estimating the isosteric heat of adsorption from pressure-loading data sets at varying temperatures. For a complete list of available models, refer to the list of supported models supported_models.","category":"page"},{"location":"","page":"Home","title":"Home","text":"For multicomponent systems, Langmuir.jl employs the Ideal Adsorption Solution Theory (IAST) to predict the loading of different components, given their bulk pressure, temperature and individual isotherms. This approach allows for predictive modeling of multicomponent adsorption.","category":"page"},{"location":"","page":"Home","title":"Home","text":"A complete workflow for using Langmuir.jl typically includes the following steps:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Data Preparation: Load your dataset, which should include adsorption loading, pressure, temperature, and heat data.\nIsotherm Fitting: Fit the appropriate isotherm model to your data using a global optimization method to ensure accurate parameter estimation.\nMulticomponent Loading Estimation: Use Ideal Adsorption Solution Theory (IAST) to predict the loading of each component in a multicomponent system based on bulk pressure and temperature.\nIsosteric Heat Calculation: Estimate the isosteric heat of adsorption for single or multicomponent systems using the library's built-in functions, which account for temperature dependencies in the isotherm parameters.","category":"page"},{"location":"#Authors","page":"Home","title":"Authors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Andrés Riedemann, University of Concepción\nVinicius Santana, Norwegian University of Science and Technology - NTNU.\nPierre Walker - Caltech. ","category":"page"}]
}
